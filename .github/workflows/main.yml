# vim: et

on:
  push:

jobs:
  tests:
    name: Run Tox & PyTest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - "3.11"
          - "3.12"
          - "3.13"

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ matrix.python }}

      - name: Prepare pip
        run: |
          python -m pip install --upgrade pip

      - name: Install prerequistes for testing
        run: |
          python -m pip install tox tox-gh

      - name: Prepare Tox
        run: |
          tox run -v --notest --skip-missing-interpreters false
        env:
          TOX_GH_MAJOR_MINOR: ${{ matrix.python }}

      - name: Run Tox
        run: |
          tox run --skip-pkg-install
        env:
          TOX_GH_MAJOR_MINOR: ${{ matrix.python }}

  linting:
    name: Run MyPy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: 3.11

      - name: Prepare pip
        run: |
          python -m pip install --upgrade pip

      - name: Install prerequistes for testing
        run: |
          python -m pip install .[test]

      - name: Run MyPy
        run: |
          mypy --exclude build .

  publish-test:
    name: Publish pushes to PyPi's test instance
    if: github.event_name == 'push'
    needs:
      - tests
      - linting
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: 3.11

      - name: Prepare pip and install build
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Make the version number unique
        run: |
          python update-version-for-test-push.py

      - name: Build source and wheel distributions
        run: |
          python -m build .

      - name: Save distribution packages as an artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish pushes to PyPI test
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-prod:
    name: Publish tags to PyPi production
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [tests, linting]
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: 3.11

      - name: Prepare pip and install build
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build source and wheel distributions
        run: |
          python -m build .

      - name: Save distribution packages as an artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish tags to PyPI production
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc
